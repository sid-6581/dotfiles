" vim: filetype=vim :

source ~/.config/vifm/icons.vifm
source ~/.config/vifm/filetypes.vifm

plugin load

" ------------------------------------------------------------------------------
" Settings
" ------------------------------------------------------------------------------

" Command used to edit files in various contexts.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.
set vicmd=nvim

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.
set notrash

" Don't show ..
set dotdirs=

" What should be saved automatically on restarting vifm.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,chistory,shistory,ehistory,phistory,dirstack,registers,bookmarks,bmarks,mchistory

" This is size of all of the many kinds of histories, in particular it's the
" number of last visited directories (not necessarily distinct ones) stored in
" the directory history.
set history=100

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" Show location in terminal title.
set title

" Relative line numbers.
set number
set relativenumber

" Natural sort of (version) numbers within text.
set sortnumbers

" Case insensitive sorting.
set sort=+iname

" Maximum number of changes that can be undone.
set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.
set vimhelp

" Highlight all columns
set hloptions=filehi:allrows

" If you would like to run an executable file when you
" press Enter, l or Right Arrow, set this.
set norunexec

" Format for displaying sizes in file list.
set sizefmt='units:iec,precision:1'

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt='%a %b %d %H:%M %Y'

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" Don't select search matches automatically
set nohlsearch

" Don't wrap in quick view
set nowrap

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Keep matching files in filter
set cpoptions-=f

set uioptions=iodetails
set tuioptions=pu

set statusline="  Hint: %z%= %T  %A %10u:%-7g %15s %20d  "

set grepprg=rg\ --color=never\ -Hn\ %i\ %a\ %s
set findprg=fd\ --color=never\ %p\ %s

" List of color schemes to try (picks the first one supported by the terminal)
colorscheme gruvbox

" Customize view columns
set viewcolumns=-{name}..,6{size}.,23{mtime},12{perms}

" Show vertical border
set fillchars=vborder:â”‚

set dotfiles

" ------------------------------------------------------------------------------
" Bookmarks
" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark c ~/.config
mark d ~/Downloads
mark h ~/
mark m /mnt/
mark r /

" ------------------------------------------------------------------------------
" Commands
" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
"
" These are some of the macros that can be used in the action part:
"  %a for user arguments
"  %c for current file under the cursor
"  %C for current file under the cursor of inactive pane
"  %f for selected file(s)
"  %F for selected file(s) of inactive pane
"  %b is the same as %f %F
"  %d for current directory name
"  %D for current directory name of inactive pane
"  %r{x} for list of files in register {x}
"  %m runs the command in a menu window
"  %u uses command's output to build a file list
"  see `:help vifm-macros` and `:help vifm-filename-modifiers` for more

command! df df -h %m 2> /dev/null
command! diff nvim -d %f %F
command! mcd :mkdir %a | cd %a
command! reload :write | restart full
command! run !! ./%f
command! vgrep nvim "+grep %a"
command! zip zip -r %c.zip %f

" ------------------------------------------------------------------------------
" Mappings
" ------------------------------------------------------------------------------

" Select files using space
nnoremap <Space> tj

" Shell
nnoremap s :!nu -i<cr>

" Quit
nnoremap q :q<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Help
nnoremap <f1> :help<cr>

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Open file using xdg-open
nnoremap o :!xdg-open %c %i<cr>

" Interaction with system clipboard
if $WAYLAND_DISPLAY != ''
    if executable('wl-copy')
        " Yank current directory path into primary and selection clipboards
        nnoremap yd :!echo -n %d | wl-copy %i &&
                    \ echo -n %d | wl-copy -p %i<cr>
        " Yank current file path into into primary and selection clipboards
        nnoremap yf :!echo -n %c:p | wl-copy %i &&
                    \ echo -n %c:p | wl-copy -p %i<cr>
    endif
elseif $DISPLAY != ''
    if executable('xclip')
        " Yank current directory path into the clipboard
        nnoremap yd :!echo -n %d | xclip -selection clipboard %i<cr>
        " Yank current file path into the clipboard
        nnoremap yf :!echo -n %c:p | xclip -selection clipboard %i<cr>
    elseif executable('xsel')
        " Yank current directory path into primary and selection clipboards
        nnoremap yd :!echo -n %d | xsel --input --primary %i &&
                    \ echo -n %d | xsel --clipboard --input %i<cr>
        " Yank current file path into into primary and selection clipboards
        nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
                    \ echo -n %c:p | xsel --clipboard --input %i<cr>
    endif
endif

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" As above, but without the file extension
" nnoremap I cW<c-a>
" nnoremap cc cW<c-u>
" nnoremap A cW

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f2> cw<c-a>
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy -skip &<cr>
nnoremap <f6> :move -skip &<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete &<cr>

" Open current directory in the other pane
nnoremap <a-i> :sync<cr>

" Open directory under cursor in the other pane
nnoremap <a-o> :sync %c<cr>

" Wildmenu navigation
cnoremap <C-j> <Tab>
cnoremap <C-k> <S-Tab>

" Swap panes (uncomment if you don't need builtin behaviour of Ctrl-U)
" nnoremap <c-u> <c-w>x
